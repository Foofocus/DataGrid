{block style}
<style>
    #{$id} table tfoot.sortable th input.form-control, #{$id} table thead.sortable th input.form-control{
        width: calc(100% - 10px);
        font-weight: normal;
        position: absolute;
        bottom: 0;
        left: 0;
        margin: 5px;
    }
    #{$id} table tfoot.sortable th, #{$id} table thead.sortable th{
        padding-bottom: 45px;
        position: relative;
    }
    table.dataTable thead.sortable .sorting:after, table.dataTable thead.sortable .sorting_asc:after, table.dataTable thead.sortable .sorting_desc:after, table.dataTable thead.sortable .sorting_asc_disabled:after, table.dataTable thead.sortable .sorting_desc_disabled:after {
        bottom: 45px;
    }
    table.dataTable>tbody>tr.child span.dtr-title input {
        display: none;
    }
</style>
{/block}
        {snippet tableList}
                
                   <div id="{$id}" class="dataTableContainer"> 
                             <table class="table table-bordered table-striped dataTable overlay-wrapper {if $lazyLoading === true}lazyload{/if}" width="100%">
                                <thead class="{if $column_search === true}sortable{/if}">
                                    <tr>
                                        {foreach $columns AS $column}
                                            <th class="dataTables_filter">{if $column_search === true && $column->search === true}{$column->name}<input type="text" placeholder="{$column->name}" class="form-control" />{else}{$column->name}{/if}</th>
                                        {/foreach}
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                                {if $showFooter === true}
                                <tfoot>
                                    <tr>
                                        {foreach $columns AS $column}
                                            <th>{$column->name}</th>
                                        {/foreach}
                                    </tr>
                                </tfoot>
                                {/if}
                            </table>
                            {block beforeScript}
                            {/block}
                            <script>
                              $(function () {
                                var table = $("#"+{$id}+" table").DataTable({
                                    'bSortCellsTop': true,
                                    'async'       : {$async},
                                    'paging'      : {$paging},
                                    'searching'   : {$searching},
                                    'ordering'    : {$ordering},
                                    'order'       : [[{$order[column]}, {$order[direction]|lower}]],
                                    'info'        : {$info},
                                    'language':   { "url": {$languageUrl} },
                                    'deferLoading': 0,
                                    'stateSave'   : {$stateSave},
                                    'responsive'  : {$responsive},
                                    'processing'  : {$async},
                                    'serverSide'  : {$async},
                                    'pageLength'  : {$pageLength},
                                    'select'      : true,
                                    'lengthMenu'  : [{foreach $pageLengthSelect AS $val}{$val},{/foreach}],
                                    'displayStart': {$offset},
                                    ajax: {
                                        url: {link getPage},
                                        data: function ( d ) {
                                            return $.extend( {}, d, {{foreach $ajaxParams AS $key => $value}{$key}: $("#"+{$value}).val(),{/foreach}});
                                        }
                                    },
                                    columns: [{foreach $columns AS $key => $column}
                                                { data: {$key}, name: {$column->index}, orderable: {$column->sortable}, visible: {if $column->hidden === true}false{else}true{/if}, render: function(data){

                                                    {if $column->type === "link"}
                                                        var obj = $("<a>",{ "href": data.link{ifset $column->classes}, "class":"{foreach $column->classes AS $class} {$class|noescape} {/foreach} {ifset $column->ajax}ffajax{/ifset}"{/ifset}{ifset $column->attributes}, {foreach $column->attributes AS $k => $attribute}{$k}:{$attribute}{/foreach}{/ifset}{ifset $column->confirm},"data-confirm":{$column->confirm}{/ifset}{ifset $column->successCallbackFunction},"data-callback-function":{$column->successCallbackFunction}{/ifset} }).text(data.value);
                                                        return obj[0].outerHTML;       
                                                    {else}
                                                        var obj = $("<span>",{{ifset $column->classes} "class":"{foreach $column->classes AS $class} {$class|noescape} {/foreach}"{/ifset}{ifset $column->attributes}, {foreach $column->attributes AS $k => $attribute}{$k}:{$attribute}{/foreach}{/ifset} }).html(data);
                                                        return obj[0].outerHTML;       
                                                        return data;
                                                    {/if}                                                        

                                                } },
                                            {/foreach}],
                                    {if $groupColumn !== null}                 
                                    rowGroup: {
                                        dataSrc: {$groupColumn}
                                    },
                                    {/if}
                                    initComplete: function(settings, json){
                                  
                                    {if $column_search === true}
                                            
                                        $('thead th input').on('click', function(e){ e.stopPropagation(); }).on('keypress', function(e){ e.stopPropagation(); }).on('focusin', function(e){ e.stopPropagation(); });
                                
                                        this.api().columns().every( function () {

                                            if(this.visible() === false) return;
                                            var that = this;

                                            $('input', this.header()).on( 'change', function () {
                                                    that.search( this.value ).draw();
                                            } );

                                        });                                                                                                                                                  
                                    {/if} 
                                  
                                    },
                                    createdRow: function( row, data, dataIndex ) {
                                      {foreach $columns AS $key => $column}                                         
                                            {ifset $column->rowCondition}                                               
                                                if ( data[{$key}] == {$column->rowCondition->value} && {$column->rowCondition->type} == "css") { 
                                                    
                                                    $(row).addClass({$column->rowCondition->class});

                                                }                                            
                                            {/ifset}
                                        {/foreach}

                                    }
                                  
                                });
                                
                                {if $lazyLoading === true}
                                var is_in_tab = $("#"+{$id}+" table").parents(".tab-pane");
                                if(is_in_tab.length){
                                    if(is_in_tab.hasClass("active")){
                                        
                                        table.ajax.reload();
                                        
                                    }else{
                                        
                                        $("[data-toggle='tab'][href='#" + is_in_tab.attr("id") + "']").one("click", function(){
                                        
                                            table.ajax.reload();
    
                                        });
        
                                    }    
                                }else{      
                                    table.ajax.reload();
                                }
                                {else}
                                    table.ajax.reload();
                                {/if}
                                 
                                {ifset $hashSearch}
                                    processFooFocusDataGridHashHandler(table, false, {$hashSearch});
                                    window.addEventListener('hashchange', function(){ processFooFocusDataGridHashHandler(table, true, {$hashSearch});}, false);
                                {/ifset}
    
                                $(document).on("click","#"+{$id}+" table tr td a.ffajax", function(e){

                                    e.preventDefault();
                                    processFooFocusDataGridAjax(table, $(this), {$id}, {$async});
                                                                        
                                });
                                
                                function processFooFocusDataGridAjax(table, that, id, async){

                                    var call = false;
                                    if(that.attr("data-callback-function")){
                                        call = that.attr("data-callback-function");
                                    }

                                    if(that.attr("data-confirm")){

                                        if(confirm(that.attr("data-confirm"))){

                                            var spinner = $("<div class='overlay'><i class='fa fa-refresh fa-spin'></i></div>");
                                            spinner.appendTo("#"+id+" .overlay-wrapper");

                                            $.nette.ajax({ url: that.attr("href"), success: function(payload){

                                                if("success" in payload && payload.success === true){
                                                    if(async) table.ajax.reload(null, false);                                                      
                                                    if(call) window[call](payload); 
                                                 }

                                            }, complete: function(){

                                                spinner.remove();                                                    

                                            } }); 

                                        }

                                    }else{

                                        var spinner = $("<div class='overlay'><i class='fa fa-refresh fa-spin'></i></div>");
                                        spinner.appendTo("#"+id+" .overlay-wrapper");

                                        $.nette.ajax({ url: that.attr("href"), success: function(payload){

                                                    if("success" in payload && payload.success === true){
                                                        if(async) table.ajax.reload(null, false);
                                                        if(call) window[call](payload);
                                                    }

                                        }, complete: function(){

                                                spinner.remove();                                                    

                                        } });                                        

                                    }

                                }

                                function processFooFocusDataGridHashHandler(table, redraw, hashSearch) {

                                    if(location.hash.length){

                                        var hash = location.hash.substr(1, location.hash.length);
                                        var explode = hash.split("&");
                                        $.each(explode, function(i,v){

                                            var ex = v.split("=");
                                            if(ex[0] === hashSearch){

                                                var tag = decodeURIComponent(ex[1]);
                                                table.search(tag);
                                                if(redraw) table.draw();

                                            }              

                                        });

                                    }

                                }                                

                              });

                            </script>
                            {block additionalScript}
                            {/block}                                            

                    </div>

        {/snippet}
